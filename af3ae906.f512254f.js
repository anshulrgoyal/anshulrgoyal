(window.webpackJsonp=window.webpackJsonp||[]).push([[43],{115:function(e,n,t){"use strict";t.d(n,"a",(function(){return b})),t.d(n,"b",(function(){return u}));var a=t(0),o=t.n(a);function i(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function r(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);n&&(a=a.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,a)}return t}function s(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?r(Object(t),!0).forEach((function(n){i(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):r(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function c(e,n){if(null==e)return{};var t,a,o=function(e,n){if(null==e)return{};var t,a,o={},i=Object.keys(e);for(a=0;a<i.length;a++)t=i[a],n.indexOf(t)>=0||(o[t]=e[t]);return o}(e,n);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(a=0;a<i.length;a++)t=i[a],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(o[t]=e[t])}return o}var l=o.a.createContext({}),p=function(e){var n=o.a.useContext(l),t=n;return e&&(t="function"==typeof e?e(n):s(s({},n),e)),t},b=function(e){var n=p(e.components);return o.a.createElement(l.Provider,{value:n},e.children)},d={inlineCode:"code",wrapper:function(e){var n=e.children;return o.a.createElement(o.a.Fragment,{},n)}},m=o.a.forwardRef((function(e,n){var t=e.components,a=e.mdxType,i=e.originalType,r=e.parentName,l=c(e,["components","mdxType","originalType","parentName"]),b=p(t),m=a,u=b["".concat(r,".").concat(m)]||b[m]||d[m]||i;return t?o.a.createElement(u,s(s({ref:n},l),{},{components:t})):o.a.createElement(u,s({ref:n},l))}));function u(e,n){var t=arguments,a=n&&n.mdxType;if("string"==typeof e||a){var i=t.length,r=new Array(i);r[0]=m;var s={};for(var c in n)hasOwnProperty.call(n,c)&&(s[c]=n[c]);s.originalType=e,s.mdxType="string"==typeof e?e:a,r[1]=s;for(var l=2;l<i;l++)r[l]=t[l];return o.a.createElement.apply(null,r)}return o.a.createElement.apply(null,t)}m.displayName="MDXCreateElement"},98:function(e,n,t){"use strict";t.r(n),t.d(n,"frontMatter",(function(){return r})),t.d(n,"metadata",(function(){return s})),t.d(n,"rightToc",(function(){return c})),t.d(n,"default",(function(){return p}));var a=t(2),o=t(6),i=(t(0),t(115)),r={slug:"easy-documentation-docusaurus",title:"Easy Documentation using Docusaurus",author:"Anshul Goyal",author_url:"https://github.com/anshulrgoyal",author_image_url:"/img/anshul.jpg",tags:["reatcjs","documentation","web"],image:"https://i0.wp.com/blog.logrocket.com/wp-content/uploads/2020/08/easy_documentation_using_docusaurus_web.png?w=730&ssl=1"},s={permalink:"/anshulrgoyal/blog/easy-documentation-docusaurus",source:"@site/blog/2020-08-05-docusaurus.md",description:"This article was originally published here",date:"2020-08-05T00:00:00.000Z",tags:[{label:"reatcjs",permalink:"/anshulrgoyal/blog/tags/reatcjs"},{label:"documentation",permalink:"/anshulrgoyal/blog/tags/documentation"},{label:"web",permalink:"/anshulrgoyal/blog/tags/web"}],title:"Easy Documentation using Docusaurus",readingTime:12.39,truncated:!0,prevItem:{title:"MLH Fellowship: A new way of learning",permalink:"/anshulrgoyal/blog/mlh-fellowship"},nextItem:{title:"The state of Rust: Authorization/authentication libraries",permalink:"/anshulrgoyal/blog/rust-auth-lib"}},c=[{value:"This article was originally published here",id:"this-article-was-originally-published-here",children:[]},{value:"Project Structure",id:"project-structure",children:[]},{value:"Scripts",id:"scripts",children:[]},{value:"Title and favicon",id:"title-and-favicon",children:[]},{value:"Home Page",id:"home-page",children:[]},{value:"Navbar",id:"navbar",children:[]},{value:"Color schema",id:"color-schema",children:[]},{value:"Footer",id:"footer",children:[]},{value:"Sidebar",id:"sidebar",children:[]},{value:"Versioning",id:"versioning",children:[]}],l={rightToc:c};function p(e){var n=e.components,t=Object(o.a)(e,["components"]);return Object(i.b)("wrapper",Object(a.a)({},l,t,{components:n,mdxType:"MDXLayout"}),Object(i.b)("h2",{id:"this-article-was-originally-published-here"},"This article was originally published ",Object(i.b)("a",Object(a.a)({parentName:"h2"},{href:"https://blog.logrocket.com/easy-documentation-with-docusaurus/"}),"here")),Object(i.b)("h1",{id:"introduction"},"Introduction"),Object(i.b)("p",null,"Documentation is an integral part of the software development lifecycle. Without documentation, a project can't reach its maximum potential but writing and maintaining documentation is very tough task , Docusaurus comes into the picture. Docusaurus helps to create and maintain static documentation websites with support for blogs, versioning, and custom pages. Docusaurus generates a static React.js website using MDX for docs and blogs. MDX is a markdown variant that allows the use of JSX inside markdown. This tutorial will use version 2 of Docusaurus. Docsaurus supports both the Dark and Light theme by default."),Object(i.b)("p",null,Object(i.b)("img",Object(a.a)({parentName:"p"},{src:"https://i.redd.it/dza5kr53ov951.jpg",alt:"Post image"}))),Object(i.b)("h1",{id:"scaffold-project-website"},"Scaffold project website"),Object(i.b)("p",null,"Node.js and NPM are required to install and use Docusaurus. Node.js is available on the official website. ",Object(i.b)("inlineCode",{parentName:"p"},"@docusaurus/init")," is the easiest method to scaffold a Docusaurus website. You can execute ",Object(i.b)("inlineCode",{parentName:"p"},"init")," command in any directory."),Object(i.b)("pre",null,Object(i.b)("code",Object(a.a)({parentName:"pre"},{}),"npx @docusaurus/init@next init my-website classic\n")),Object(i.b)("p",null,"This command will create a ",Object(i.b)("inlineCode",{parentName:"p"},"my-website")," named website in the current directory using the ",Object(i.b)("inlineCode",{parentName:"p"},"classic")," template. Docusaurus provides different templates. Start the project by running ",Object(i.b)("inlineCode",{parentName:"p"},"npm start")," in the project directory. You can now see project running on http://localhost:3000"),Object(i.b)("p",null,Object(i.b)("img",Object(a.a)({parentName:"p"},{src:"https://paper-attachments.dropbox.com/s_52D646A6E2A3431ECB292EB7182064D5D5D30CCBDC8D380910ADC9E860F7BB78_1593845812534_image.png",alt:"Home page"}))),Object(i.b)("p",null,Object(i.b)("img",Object(a.a)({parentName:"p"},{src:"https://paper-attachments.dropbox.com/s_52D646A6E2A3431ECB292EB7182064D5D5D30CCBDC8D380910ADC9E860F7BB78_1593845907989_image.png",alt:"Docs Page"}))),Object(i.b)("h2",{id:"project-structure"},"Project Structure"),Object(i.b)("pre",null,Object(i.b)("code",Object(a.a)({parentName:"pre"},{}),"\u251c\u2500\u2500 babel.config.js\n\u251c\u2500\u2500 blog\n\u2502   \u251c\u2500\u2500 2019-05-28-hola.md\n\u2502   \u251c\u2500\u2500 2019-05-29-hello-world.md\n\u2502   \u2514\u2500\u2500 2019-05-30-welcome.md\n\u251c\u2500\u2500 docs\n\u2502   \u251c\u2500\u2500 doc1.md\n\u2502   \u251c\u2500\u2500 doc2.md\n\u2502   \u251c\u2500\u2500 doc3.md\n\u2502   \u2514\u2500\u2500 mdx.md\n\u251c\u2500\u2500 docusaurus.config.js\n\u251c\u2500\u2500 package.json\n\u251c\u2500\u2500 README.md\n\u251c\u2500\u2500 sidebars.js\n\u251c\u2500\u2500 src\n\u2502   \u251c\u2500\u2500 css\n\u2502   \u2502   \u2514\u2500\u2500 custom.css\n\u2502   \u2514\u2500\u2500 pages\n\u2502       \u251c\u2500\u2500 index.js\n\u2502       \u2514\u2500\u2500 styles.module.css\n\u251c\u2500\u2500 static\n\u2502   \u2514\u2500\u2500 img\n\u2502       \u251c\u2500\u2500 favicon.ico\n\u2502       \u251c\u2500\u2500 logo.svg\n\u2502       \u251c\u2500\u2500 undraw_docusaurus_mountain.svg\n\u2502       \u251c\u2500\u2500 undraw_docusaurus_react.svg\n\u2502       \u2514\u2500\u2500 undraw_docusaurus_tree.svg\n\u2514\u2500\u2500 yarn.lock\n")),Object(i.b)("p",null,"All the settings related to Docusaurus plugins presets and themes reside in ",Object(i.b)("inlineCode",{parentName:"p"},"docusaurus.config.js"),". ",Object(i.b)("inlineCode",{parentName:"p"},"sidebars.js")," contains all the entries for sidebars."),Object(i.b)("h2",{id:"scripts"},"Scripts"),Object(i.b)("p",null,"Scaffold project has few scripts already present in ",Object(i.b)("inlineCode",{parentName:"p"},"package.json")," file. These scripts are used to manage the Docusaurus project. We will use two of these scripts:"),Object(i.b)("ol",null,Object(i.b)("li",{parentName:"ol"},"n",Object(i.b)("inlineCode",{parentName:"li"},"pm start")," it is used to start dev server on ",Object(i.b)("inlineCode",{parentName:"li"},"localhost:3000"),". It detects changes to the project and reloads."),Object(i.b)("li",{parentName:"ol"},"n",Object(i.b)("inlineCode",{parentName:"li"},"pm run build")," is used to create an optimized production build for the project. It will create a ",Object(i.b)("inlineCode",{parentName:"li"},"build")," folder that will have a compiled project.")),Object(i.b)("h1",{id:"customizing-website"},"Customizing website"),Object(i.b)("p",null,"Docusaurus is very customizable. Components like navbar, footer, and title are customizable in ",Object(i.b)("inlineCode",{parentName:"p"},"docusaurus.config.js"),"."),Object(i.b)("h2",{id:"title-and-favicon"},"Title and favicon"),Object(i.b)("p",null,"Title, tagline, and favicon can be customized by changing corresponding keys in ",Object(i.b)("inlineCode",{parentName:"p"},"docusaurus.config.js"),"."),Object(i.b)("pre",null,Object(i.b)("code",Object(a.a)({parentName:"pre"},{}),"  title: 'Imdb Scrapper', // title of website\n  tagline: 'Scrap Imdb Like a Pro', // used in meta data\n  url: 'http://localhost:3000/', // url where websited is hosted\n  baseUrl: '/', // path where website is available\n  favicon: 'img/favicon.ico', // path to favicon with respect to static dir\n  organizationName: 'anshulrgoyal', // github user name \n  projectName: 'imdb-scrapper',// project name i.e repo name of project\n")),Object(i.b)("p",null,Object(i.b)("inlineCode",{parentName:"p"},"organiztionName")," and ",Object(i.b)("inlineCode",{parentName:"p"},"projectName")," are optional. Now you can test changes by starting the project using ",Object(i.b)("inlineCode",{parentName:"p"},"npm start")," command."),Object(i.b)("p",null,"Go to http://localhost:3000 to see changes."),Object(i.b)("p",null,Object(i.b)("img",Object(a.a)({parentName:"p"},{src:"https://paper-attachments.dropbox.com/s_52D646A6E2A3431ECB292EB7182064D5D5D30CCBDC8D380910ADC9E860F7BB78_1593857746239_image.png",alt:null}))),Object(i.b)("h2",{id:"home-page"},"Home Page"),Object(i.b)("p",null,Object(i.b)("inlineCode",{parentName:"p"},"src/pages/index.js")," is the homepage for the website. It exports a React.js component which is rendered between navbar and footer. You can create your component in ",Object(i.b)("inlineCode",{parentName:"p"},"index.js"),". ",Object(i.b)("inlineCode",{parentName:"p"},"preset-classic")," also includes a CSS framework built by Docusaurus team called ",Object(i.b)("a",Object(a.a)({parentName:"p"},{href:"https://facebookincubator.github.io/infima/"}),"Infima.")),Object(i.b)("pre",null,Object(i.b)("code",Object(a.a)({parentName:"pre"},{}),'import React from "react";\nimport clsx from "clsx";\nimport Layout from "@theme/Layout"; // it is a sudo import, theme will be injected at build time\nimport Link from "@docusaurus/Link"; // docusaurus exports react-router\nimport useDocusaurusContext from "@docusaurus/useDocusaurusContext"; // get metadata about page\nimport useBaseUrl from "@docusaurus/useBaseUrl"; // gives link after concating website url and path\nimport styles from "./styles.module.css";\nconst features = [\n  {\n    title: <>Updated Regularly</>,\n    imageUrl: "img/updated.svg", // path to image with respect to staic dir\n    description: (\n      <>\n        Scrapping links and scripts are updated on daily bases. Scripts are well\n        tested and robust.\n      </>\n    ),\n  },\n  {\n    title: <>Lighting Fast</>,\n    imageUrl: "img/fast.svg", // path to image with respect to staic dir\n    description: (\n      <>Lighting fast, built with speed in mind support caching by default.</>\n    ),\n  },\n  {\n    title: <>Automated scripts</>,\n    imageUrl: "img/automated.svg", // path to image with respect to staic dir\n    description: (\n      <>\n        No manual work required just pass imdbId and get movies\n        and tvs shows scrapped.\n      </>\n    ),\n  },\n];\n// Feature component\nfunction Feature({ imageUrl, title, description }) {\n  const imgUrl = useBaseUrl(imageUrl);\n  return (\n    <div className={clsx("col col--4", styles.feature)}>\n      {imgUrl && (\n        <div className="text--center">\n          <img className={styles.featureImage} src={imgUrl} alt={title} />\n        </div>\n      )}\n      <h3>{title}</h3>\n      <p>{description}</p>\n    </div>\n  );\n}\nfunction Home() {\n  const context = useDocusaurusContext();\n  const { siteConfig = {} } = context;\n  return (\n    <Layout\n      title={`Hello from ${siteConfig.title}`}\n      description="Description will go into a meta tag in <head />"\n    >\n      <header className={clsx("hero hero--primary", styles.heroBanner)}>\n        <div className="container">\n          <h1 className="hero__title">{siteConfig.title}</h1>\n          <p className="hero__subtitle">{siteConfig.tagline}</p>\n          <div className={styles.buttons}>\n            <Link\n              className={clsx(\n                "button button--outline button--secondary button--lg",\n                styles.getStarted\n              )}\n              to={useBaseUrl("docs/")}\n            >\n              Get Started\n            </Link>\n          </div>\n        </div>\n      </header>\n      <main>\n        {features && features.length > 0 && (\n          <section className={styles.features}>\n            <div className="container">\n              <div className="row">\n                {features.map((props, idx) => (\n                  <Feature key={idx} {...props} />\n                ))}\n              </div>\n            </div>\n          </section>\n        )}\n      </main>\n    </Layout>\n  );\n}\nexport default Home;\n')),Object(i.b)("h2",{id:"navbar"},"Navbar"),Object(i.b)("p",null,"Navbar is a part of ",Object(i.b)("inlineCode",{parentName:"p"},"preset-classic"),", it is not the part of ",Object(i.b)("inlineCode",{parentName:"p"},"@docusaurus/core"),". Configuration to the theme is passed as ",Object(i.b)("inlineCode",{parentName:"p"},"themeConfig")," object in ",Object(i.b)("inlineCode",{parentName:"p"},"docusaurus.config.js"),". ",Object(i.b)("inlineCode",{parentName:"p"},"navbar")," key in ",Object(i.b)("inlineCode",{parentName:"p"},"themeConfig")," holds the config for the navbar."),Object(i.b)("p",null,Object(i.b)("strong",{parentName:"p"},"Adding logo")),Object(i.b)("pre",null,Object(i.b)("code",Object(a.a)({parentName:"pre"},{}),'themeConfig: {\n    navbar: {\n      title: "Imdb Scrapper", // title\n      logo: {\n        alt: "My Site Logo",\n        src: "img/logo.svg", // path with respect to static dir\n      },\n   }\n}\n')),Object(i.b)("p",null,"We can add a logo by providing ",Object(i.b)("inlineCode",{parentName:"p"},"src")," and ",Object(i.b)("inlineCode",{parentName:"p"},"alt"),". If the logo is not provided, it wouldn't be displayed."),Object(i.b)("p",null,Object(i.b)("strong",{parentName:"p"},"Adding links"),"\nDocusaurus supports hyperlinks to other pages on the same domain by providing a path or to another domain by providing a URL."),Object(i.b)("pre",null,Object(i.b)("code",Object(a.a)({parentName:"pre"},{}),'navbar: {\n      title: "Imdb Scrapper",\n      links: [\n        {\n          to: "docs/", // path to page\n          activeBasePath: "docs", // active it url matches regex\n          label: "Docs",\n          position: "left",\n        },\n        { to: "blog", label: "Blog", position: "right" },\n        {\n          href: "https://github.com/anshulrgoyal/imdb-scrapper", // to other domain\n          label: "GitHub",\n          position: "right",\n        },\n      ],\n')),Object(i.b)("p",null,"If ",Object(i.b)("inlineCode",{parentName:"p"},"to")," is passed to ",Object(i.b)("inlineCode",{parentName:"p"},"links"),", then ",Object(i.b)("inlineCode",{parentName:"p"},"react-router")," will be used, where as, if ",Object(i.b)("inlineCode",{parentName:"p"},"href")," is passed, anchor tag is used."),Object(i.b)("p",null,Object(i.b)("img",Object(a.a)({parentName:"p"},{src:"https://paper-attachments.dropbox.com/s_52D646A6E2A3431ECB292EB7182064D5D5D30CCBDC8D380910ADC9E860F7BB78_1593863446457_image.png",alt:null}))),Object(i.b)("h2",{id:"color-schema"},"Color schema"),Object(i.b)("p",null,"Infima support CSS variables for customizing color schema. We can edit ",Object(i.b)("inlineCode",{parentName:"p"},"src/css/custom.css")," to change the color schema."),Object(i.b)("pre",null,Object(i.b)("code",Object(a.a)({parentName:"pre"},{}),":root {\n--ifm-color-primary: #f50057;\n--ifm-color-primary-dark: #dd004e;\n--ifm-color-primary-darker: #d0004a;\n--ifm-color-primary-darkest: #ab003d;\n--ifm-color-primary-light: #ff0f64;\n--ifm-color-primary-lighter: #ff1b6c;\n--ifm-color-primary-lightest: #ff4084;\n}\n")),Object(i.b)("p",null,"This will change the color schema for Infima defaults to match svg images."),Object(i.b)("p",null,Object(i.b)("img",Object(a.a)({parentName:"p"},{src:"https://paper-attachments.dropbox.com/s_52D646A6E2A3431ECB292EB7182064D5D5D30CCBDC8D380910ADC9E860F7BB78_1593864098960_image.png",alt:null}))),Object(i.b)("h2",{id:"footer"},"Footer"),Object(i.b)("p",null,"Similar to Navbar. Footer can be customized using ",Object(i.b)("inlineCode",{parentName:"p"},"footer")," in ",Object(i.b)("inlineCode",{parentName:"p"},"themeConfig")," in ",Object(i.b)("inlineCode",{parentName:"p"},"docusaurus.config.js"),"."),Object(i.b)("p",null,Object(i.b)("strong",{parentName:"p"},"Logo"),"\nAdding a logo is simple, just provide the path to an image in the ",Object(i.b)("inlineCode",{parentName:"p"},"logo")," object."),Object(i.b)("pre",null,Object(i.b)("code",Object(a.a)({parentName:"pre"},{}),"footer: {\n  logo: {\n    alt: 'Some logo',\n    src: 'img/oss_logo.png', // with respect to static dir\n    href: 'url',\n  },\n},\n")),Object(i.b)("p",null,Object(i.b)("strong",{parentName:"p"},"Copyright"),"\nAdd copyright text to ",Object(i.b)("inlineCode",{parentName:"p"},"copyright")," key on footer object."),Object(i.b)("pre",null,Object(i.b)("code",Object(a.a)({parentName:"pre"},{}),"footer: {\n      copyright: `Copyright \xa9 ${new Date().getFullYear()} Anshul Goyal, Inc. Built with Docusaurus.`,\n    },\n")),Object(i.b)("p",null,Object(i.b)("strong",{parentName:"p"},"Links"),"\nWe can add links to footer by providing urls in ",Object(i.b)("inlineCode",{parentName:"p"},"links"),"."),Object(i.b)("pre",null,Object(i.b)("code",Object(a.a)({parentName:"pre"},{}),'footer:{\n  links:[\n        {\n          title: "Docs", //heading for links\n          items: [\n            {\n              label: "Style Guide",\n              to: "docs/",\n            },\n            {\n              label: "Second Doc",\n              to: "docs/doc2/",\n            },\n          ],\n        },\n        {\n          title: "Community", // heading for links\n          items: [\n            {\n              label: "Stack Overflow",\n              href: "https://stackoverflow.com/questions/tagged/imdb-scrapper",\n            },\n          ],\n        },\n        {\n          title: "More",\n          items: [\n            {\n              label: "Blog",\n              to: "blog",\n            },\n            {\n              label: "GitHub",\n              href: "https://github.com/anshulrgoyal/imdb-scrapper",\n            },\n          ],\n        },\n      ],\n}\n')),Object(i.b)("p",null,Object(i.b)("img",Object(a.a)({parentName:"p"},{src:"https://paper-attachments.dropbox.com/s_52D646A6E2A3431ECB292EB7182064D5D5D30CCBDC8D380910ADC9E860F7BB78_1593866288996_image.png",alt:"Footer"}))),Object(i.b)("h1",{id:"documentation"},"Documentation"),Object(i.b)("p",null,"All the documentation is added to the ",Object(i.b)("inlineCode",{parentName:"p"},"docs")," folder. We can change it in the ",Object(i.b)("inlineCode",{parentName:"p"},"docusaurus.config.js")," file. We will create ",Object(i.b)("inlineCode",{parentName:"p"},"api.md")," file in the ",Object(i.b)("inlineCode",{parentName:"p"},"docs")," folder. Docusaurus will render it automatically and create a table of content for ",Object(i.b)("inlineCode",{parentName:"p"},".md")," file."),Object(i.b)("pre",null,Object(i.b)("code",Object(a.a)({parentName:"pre"},{}),"---\nid: api\ntitle: API\n---\n# My doc\n")),Object(i.b)("p",null,Object(i.b)("inlineCode",{parentName:"p"},"id")," is used to reference this document in Docusaurus and ",Object(i.b)("inlineCode",{parentName:"p"},"/docs/{id}")," will be path to access documentation. ",Object(i.b)("inlineCode",{parentName:"p"},"title")," will be used as the page title for documentation and ",Object(i.b)("inlineCode",{parentName:"p"},"sidebar_label")," will be used as the label in the sidebar. Now we need to add our ",Object(i.b)("inlineCode",{parentName:"p"},"api")," to a sidebar. We edit ",Object(i.b)("inlineCode",{parentName:"p"},"sidebars.js")," to create a new entry."),Object(i.b)("pre",null,Object(i.b)("code",Object(a.a)({parentName:"pre"},{}),'module.exports = {\n  sidebar: {\n    "Imdb Scrapper": ["api"],\n  },\n};\n')),Object(i.b)("p",null,Object(i.b)("img",Object(a.a)({parentName:"p"},{src:"https://paper-attachments.dropbox.com/s_52D646A6E2A3431ECB292EB7182064D5D5D30CCBDC8D380910ADC9E860F7BB78_1593869088488_image.png",alt:null}))),Object(i.b)("pre",null,Object(i.b)("code",Object(a.a)({parentName:"pre"},{}),"docs/\n\u2514\u2500\u2500 api.md\n")),Object(i.b)("h2",{id:"sidebar"},"Sidebar"),Object(i.b)("p",null,"The sidebar is created recursively i.e. it can have any level of nesting. For example, I can create another category in the ",Object(i.b)("inlineCode",{parentName:"p"},"IMDB Scrapper")," category called ",Object(i.b)("inlineCode",{parentName:"p"},"Examples")," with many items."),Object(i.b)("pre",null,Object(i.b)("code",Object(a.a)({parentName:"pre"},{}),"docs/\n\u251c\u2500\u2500 api.md\n\u2514\u2500\u2500 examples\n    \u251c\u2500\u2500 actors.md\n    \u251c\u2500\u2500 award.md\n    \u251c\u2500\u2500 image.md\n    \u251c\u2500\u2500 scraping.md\n    \u251c\u2500\u2500 search.md\n    \u251c\u2500\u2500 trending.md\n    \u2514\u2500\u2500 tv.md\n")),Object(i.b)("p",null,"This is example project structure, we can also create nested documents. For example, ",Object(i.b)("inlineCode",{parentName:"p"},"actors.md")," will have ",Object(i.b)("inlineCode",{parentName:"p"},"/docs/examples/actors")," as URL path and ",Object(i.b)("inlineCode",{parentName:"p"},"id")," to refer will be ",Object(i.b)("inlineCode",{parentName:"p"},"examples/actors"),"."),Object(i.b)("pre",null,Object(i.b)("code",Object(a.a)({parentName:"pre"},{}),'module.exports = {\n  sidebar: {\n    "Imdb Scrapper": ["api",{\n      Examples:[ // nested sidebar with example as sub catogery\n        "examples/actor", // items\n        "examples/award",\n        "examples/image",\n        "examples/tv",\n        "examples/trending",\n        "examples/scraping",\n        "examples/search"\n      ]\n    }],\n  },\n};\n')),Object(i.b)("p",null,Object(i.b)("img",Object(a.a)({parentName:"p"},{src:"https://paper-attachments.dropbox.com/s_52D646A6E2A3431ECB292EB7182064D5D5D30CCBDC8D380910ADC9E860F7BB78_1593871247513_image.png",alt:null}))),Object(i.b)("p",null,"If you try to access ",Object(i.b)("inlineCode",{parentName:"p"},"/docs/"),' it will give "404 not found". To solve this, we need to update the setting of ',Object(i.b)("inlineCode",{parentName:"p"},"preset-classic")," to use ",Object(i.b)("inlineCode",{parentName:"p"},"/docs/api")," as our home doc or entry point to docs."),Object(i.b)("pre",null,Object(i.b)("code",Object(a.a)({parentName:"pre"},{}),' presets: [\n    [\n      "@docusaurus/preset-classic",\n      {\n        docs: {\n          // It is recommended to set document id as docs home page (`docs/` path).\n          homePageId: "api", // documents entry point\n          sidebarPath: require.resolve("./sidebars.js")\n        },\n        blog: {\n          showReadingTime: true,\n        },\n        theme: {\n          customCss: require.resolve("./src/css/custom.css"),\n        },\n      },\n    ],\n  ],\n')),Object(i.b)("h2",{id:"versioning"},"Versioning"),Object(i.b)("p",null,"During development, there are many changes in every version. If your product supports different versions, it is difficult to maintain documentation for each version. Docusaurus supports versioning. Let's add a script in ",Object(i.b)("inlineCode",{parentName:"p"},"package.json")," for versioning."),Object(i.b)("pre",null,Object(i.b)("code",Object(a.a)({parentName:"pre"},{}),'    "version": "docusaurus doc:version"\n')),Object(i.b)("p",null,"Now we can use ",Object(i.b)("inlineCode",{parentName:"p"},"npm run version <version>")," command for creating command."),Object(i.b)("pre",null,Object(i.b)("code",Object(a.a)({parentName:"pre"},{}),".\n\u251c\u2500\u2500 babel.config.js\n\u251c\u2500\u2500 blog\n\u2502   \u251c\u2500\u2500 2019-05-28-hola.md\n\u2502   \u251c\u2500\u2500 2019-05-29-hello-world.md\n\u2502   \u2514\u2500\u2500 2019-05-30-welcome.md\n\u251c\u2500\u2500 docs\n\u2502   \u251c\u2500\u2500 api.md\n\u2502   \u2514\u2500\u2500 examples\n\u2502       \u251c\u2500\u2500 actors.md\n\u2502       \u251c\u2500\u2500 award.md\n\u2502       \u251c\u2500\u2500 image.md\n\u2502       \u251c\u2500\u2500 scraping.md\n\u2502       \u251c\u2500\u2500 search.md\n\u2502       \u251c\u2500\u2500 trending.md\n\u2502       \u2514\u2500\u2500 tv.md\n\u251c\u2500\u2500 docusaurus.config.js\n\u251c\u2500\u2500 package.json\n\u251c\u2500\u2500 README.md\n\u251c\u2500\u2500 sidebars.js\n\u251c\u2500\u2500 src\n\u2502   \u251c\u2500\u2500 css\n\u2502   \u2502   \u2514\u2500\u2500 custom.css\n\u2502   \u2514\u2500\u2500 pages\n\u2502       \u251c\u2500\u2500 index.js\n\u2502       \u2514\u2500\u2500 styles.module.css\n\u251c\u2500\u2500 static\n\u2502   \u2514\u2500\u2500 img\n\u2502       \u251c\u2500\u2500 automated.svg\n\u2502       \u251c\u2500\u2500 fast.svg\n\u2502       \u2514\u2500\u2500 updated.svg\n\u251c\u2500\u2500 versioned_docs\n\u2502   \u2514\u2500\u2500 version-1.1.0\n\u2502       \u251c\u2500\u2500 api.md\n\u2502       \u2514\u2500\u2500 examples\n\u2502           \u251c\u2500\u2500 actors.md\n\u2502           \u251c\u2500\u2500 award.md\n\u2502           \u251c\u2500\u2500 image.md\n\u2502           \u251c\u2500\u2500 scraping.md\n\u2502           \u251c\u2500\u2500 search.md\n\u2502           \u251c\u2500\u2500 trending.md\n\u2502           \u2514\u2500\u2500 tv.md\n\u251c\u2500\u2500 versioned_sidebars\n\u2502   \u2514\u2500\u2500 version-1.1.0-sidebars.json\n\u2514\u2500\u2500 versions.json\n")),Object(i.b)("p",null,"This command will copy all the documents from ",Object(i.b)("inlineCode",{parentName:"p"},"docs/")," to ",Object(i.b)("inlineCode",{parentName:"p"},"versioned_docs"),". ",Object(i.b)("inlineCode",{parentName:"p"},"sidebars.js")," is copied to ",Object(i.b)("inlineCode",{parentName:"p"},"versioned_sidebars"),". Now there are three versions:"),Object(i.b)("ol",null,Object(i.b)("li",{parentName:"ol"},"next : all the documents in ",Object(i.b)("inlineCode",{parentName:"li"},"/doc")," folder. This version is available as ",Object(i.b)("inlineCode",{parentName:"li"},"docs/next/{id}"),"."),Object(i.b)("li",{parentName:"ol"},"latest(1.1.0) : all the documents in ",Object(i.b)("inlineCode",{parentName:"li"},"versioned_docs/version-1.1.0")," folder are versioned latest. This version is available as ",Object(i.b)("inlineCode",{parentName:"li"},"docs/{id}")),Object(i.b)("li",{parentName:"ol"},"old documents: all the documents which are in any other folder will be versioned old. This version is available as ",Object(i.b)("inlineCode",{parentName:"li"},"/docs/{version}/{id}"))),Object(i.b)("p",null,Object(i.b)("inlineCode",{parentName:"p"},"versions.json")," is created which holds all the versions for documentation."),Object(i.b)("pre",null,Object(i.b)("code",Object(a.a)({parentName:"pre"},{}),'[\n  "1.1.0"\n]\n')),Object(i.b)("p",null,"Docusaurus will be creating a snapshot of documentation for each version and saving it. Now let\u2019s add a link to each version in the navbar for easy access. We can import ",Object(i.b)("inlineCode",{parentName:"p"},"versions.json")," in ",Object(i.b)("inlineCode",{parentName:"p"},"docusaurus.config.js")," and use it."),Object(i.b)("pre",null,Object(i.b)("code",Object(a.a)({parentName:"pre"},{}),'const versions = require("./versions.json");\n')),Object(i.b)("p",null,"We can provide ",Object(i.b)("inlineCode",{parentName:"p"},"items")," to convert Link to a dropdown."),Object(i.b)("pre",null,Object(i.b)("code",Object(a.a)({parentName:"pre"},{}),'items: [\n        {\n          to: "docs/",\n          activeBasePath: "docs",\n          label: "Docs",\n          position: "left",\n          items: [ // adding items will create a dropdown\n            {\n              label: versions[0],\n              to: "docs/",\n              activeBaseRegex: `docs/(?!${versions.join("|")}|next)`,\n            },\n            ...versions.slice(1).map((version) => ({\n              label: version,\n              to: `docs/${version}/`,\n            })),\n            {\n              label: "Master/Unreleased",\n              to: "docs/next/",\n              activeBaseRegex: `docs/next/(?!support|team|resources)`,\n            },\n          ],\n        },\n]\n')),Object(i.b)("p",null,"Docusaurus has a nice feature that informs the user that the documentation belongs to an older version. If we create a new version of ",Object(i.b)("inlineCode",{parentName:"p"},"1.1.1"),", we can see it in action."),Object(i.b)("p",null,Object(i.b)("img",Object(a.a)({parentName:"p"},{src:"https://paper-attachments.dropbox.com/s_52D646A6E2A3431ECB292EB7182064D5D5D30CCBDC8D380910ADC9E860F7BB78_1593967297943_image.png",alt:null}))),Object(i.b)("p",null,"It automatically adds a banner notifying the user that documentation is old. And the new version is automatically added to the navbar."),Object(i.b)("p",null,Object(i.b)("img",Object(a.a)({parentName:"p"},{src:"https://paper-attachments.dropbox.com/s_52D646A6E2A3431ECB292EB7182064D5D5D30CCBDC8D380910ADC9E860F7BB78_1593967461994_image.png",alt:null}))),Object(i.b)("p",null,"Now if we check ",Object(i.b)("inlineCode",{parentName:"p"},"versioned_docs")," we can see both of the versions there."),Object(i.b)("pre",null,Object(i.b)("code",Object(a.a)({parentName:"pre"},{}),".\n\u251c\u2500\u2500 babel.config.js\n\u251c\u2500\u2500 blog\n\u2502   \u251c\u2500\u2500 2019-05-28-hola.md\n\u2502   \u251c\u2500\u2500 2019-05-29-hello-world.md\n\u2502   \u2514\u2500\u2500 2019-05-30-welcome.md\n\u251c\u2500\u2500 docs // next or upcoming version\n\u2502   \u251c\u2500\u2500 api.md\n\u2502   \u2514\u2500\u2500 examples\n\u2502       \u251c\u2500\u2500 actors.md\n\u2502       \u251c\u2500\u2500 award.md\n\u2502       \u251c\u2500\u2500 image.md\n\u2502       \u251c\u2500\u2500 scraping.md\n\u2502       \u251c\u2500\u2500 search.md\n\u2502       \u251c\u2500\u2500 trending.md\n\u2502       \u2514\u2500\u2500 tv.md\n\u251c\u2500\u2500 docusaurus.config.js\n\u251c\u2500\u2500 package.json\n\u251c\u2500\u2500 README.md\n\u251c\u2500\u2500 sidebars.js // next or upcoming version\n\u251c\u2500\u2500 src\n\u2502   \u251c\u2500\u2500 css\n\u2502   \u2502   \u2514\u2500\u2500 custom.css\n\u2502   \u2514\u2500\u2500 pages\n\u2502       \u251c\u2500\u2500 index.js\n\u2502       \u2514\u2500\u2500 styles.module.css\n\u251c\u2500\u2500 static\n\u2502   \u2514\u2500\u2500 img\n\u2502       \u251c\u2500\u2500 automated.svg\n\u2502       \u251c\u2500\u2500 fast.svg\n\u2502       \u2514\u2500\u2500 updated.svg\n\u251c\u2500\u2500 versioned_docs\n\u2502   \u251c\u2500\u2500 version-1.1.0 // old version\n\u2502   \u2502   \u251c\u2500\u2500 api.md\n\u2502   \u2502   \u2514\u2500\u2500 examples\n\u2502   \u2502       \u251c\u2500\u2500 actors.md\n\u2502   \u2502       \u251c\u2500\u2500 award.md\n\u2502   \u2502       \u251c\u2500\u2500 image.md\n\u2502   \u2502       \u251c\u2500\u2500 scraping.md\n\u2502   \u2502       \u251c\u2500\u2500 search.md\n\u2502   \u2502       \u251c\u2500\u2500 trending.md\n\u2502   \u2502       \u2514\u2500\u2500 tv.md\n\u2502   \u2514\u2500\u2500 version-1.1.1 // latest version\n\u2502       \u251c\u2500\u2500 api.md\n\u2502       \u2514\u2500\u2500 examples\n\u2502           \u251c\u2500\u2500 actors.md\n\u2502           \u251c\u2500\u2500 award.md\n\u2502           \u251c\u2500\u2500 image.md\n\u2502           \u251c\u2500\u2500 scraping.md\n\u2502           \u251c\u2500\u2500 search.md\n\u2502           \u251c\u2500\u2500 trending.md\n\u2502           \u2514\u2500\u2500 tv.md\n\u251c\u2500\u2500 versioned_sidebars\n\u2502   \u251c\u2500\u2500 version-1.1.0-sidebars.json // old version\n\u2502   \u2514\u2500\u2500 version-1.1.1-sidebars.json // latest version\n\u2514\u2500\u2500 versions.json\n")),Object(i.b)("h1",{id:"custom-pages"},"Custom Pages"),Object(i.b)("p",null,"Docusaurus offers the option to create custom pages, by creating files in ",Object(i.b)("inlineCode",{parentName:"p"},"src/pages"),". If a file exports a React component, it will be rendered between navbar and footer. If you create a new page ",Object(i.b)("inlineCode",{parentName:"p"},"src/pages/team")," then it will be available at ",Object(i.b)("inlineCode",{parentName:"p"},"/team"),"."),Object(i.b)("pre",null,Object(i.b)("code",Object(a.a)({parentName:"pre"},{}),'// file: ./src/pages/team.js\nimport React, { useEffect } from "react";\nimport Layout from "@theme/Layout";\nimport clsx from "clsx";\nimport styles from "./styles.module.css";\nconst TITLE = "Team";\nconst DESCRIPTION = "Awesome people working";\n\nfunction Team() {\n  return (\n    <Layout title={TITLE} description={DESCRIPTION}>\n      <main className="container margin-vert--lg">\n        <div className="text--center margin-bottom--xl">\n          <h1>{TITLE}</h1>\n          <p>{DESCRIPTION}</p>\n        </div>\n        <div className="row">\n          <div className="col col--4 margin-bottom--lg">\n            <div className={clsx("card", styles.showcaseUser)}>\n              <div className="card__image">\n                <img src="/img/fast.svg" />\n              </div>\n              <div className="card__body">\n                <div className="avatar">\n                  <div className="avatar__intro margin-left--none">\n                    <h4 className="avatar__name">Anshul Goyal</h4>\n                    <small className="avatar__subtitle">Coder for Fun :)</small>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </main>\n    </Layout>\n  );\n}\nexport default Team;\n')),Object(i.b)("p",null,"If we check ",Object(i.b)("inlineCode",{parentName:"p"},"/team")," we can see our team's page."),Object(i.b)("p",null,Object(i.b)("img",Object(a.a)({parentName:"p"},{src:"https://paper-attachments.dropbox.com/s_52D646A6E2A3431ECB292EB7182064D5D5D30CCBDC8D380910ADC9E860F7BB78_1593969408670_image.png",alt:null}))),Object(i.b)("p",null,"We can add a link to ",Object(i.b)("inlineCode",{parentName:"p"},"/team")," in the navbar."),Object(i.b)("pre",null,Object(i.b)("code",Object(a.a)({parentName:"pre"},{}),' {\n          to: "team",\n          label: "Team",\n          position: "right",\n          activeBaseRegex:`team`\n        },\n')),Object(i.b)("p",null,Object(i.b)("img",Object(a.a)({parentName:"p"},{src:"https://paper-attachments.dropbox.com/s_52D646A6E2A3431ECB292EB7182064D5D5D30CCBDC8D380910ADC9E860F7BB78_1593969630107_image.png",alt:null}))),Object(i.b)("h1",{id:"blog"},"Blog"),Object(i.b)("p",null,"Docusaurus allows us to create and manage blogs. You can create blogs by adding a blog as a markdown file in the ",Object(i.b)("inlineCode",{parentName:"p"},"blog")," folder. The file name should follow the pattern ",Object(i.b)("inlineCode",{parentName:"p"},"{date}-{name}.md"),"."),Object(i.b)("pre",null,Object(i.b)("code",Object(a.a)({parentName:"pre"},{}),"// file: ./blog/2020-07-06-my-blog\n\n---\nid: intro\ntitle: Introducing Docusaurus // title for blog\nauthor: Anshul Goyal // author name\ntags: [docusaurus,tutorial] // tags for blog\n---\n# My blog\n\x3c!--truncate--\x3e\n")),Object(i.b)("p",null,Object(i.b)("inlineCode",{parentName:"p"},"\x3c!--truncate--\x3e")," is used to mark the summary of the blog. The content between ",Object(i.b)("inlineCode",{parentName:"p"},"---")," and ",Object(i.b)("inlineCode",{parentName:"p"},"\x3c!--truncate--\x3e")," will be used as a summary for the blog."),Object(i.b)("p",null,Object(i.b)("img",Object(a.a)({parentName:"p"},{src:"https://paper-attachments.dropbox.com/s_52D646A6E2A3431ECB292EB7182064D5D5D30CCBDC8D380910ADC9E860F7BB78_1594040302474_image.png",alt:null}))),Object(i.b)("h1",{id:"deployment"},"Deployment"),Object(i.b)("p",null,"Deploying the Docusaurus website is simple. Just ",Object(i.b)("inlineCode",{parentName:"p"},"npm run build")," and serve the ",Object(i.b)("inlineCode",{parentName:"p"},"build")," directory. For example, let\u2019s deploy it to Netlify. Just connect your repo to Netlify and update settings."),Object(i.b)("p",null,Object(i.b)("img",Object(a.a)({parentName:"p"},{src:"https://paper-attachments.dropbox.com/s_52D646A6E2A3431ECB292EB7182064D5D5D30CCBDC8D380910ADC9E860F7BB78_1594042320166_image.png",alt:null}))),Object(i.b)("h1",{id:"conclusion"},"Conclusion"),Object(i.b)("p",null,"We have gone through some of basics of Docusaurus. Docusaurus is great for creating a Documentation website. It is very customizable and supports a wide array of integration. Docusaurus supports different themes, search features, image optimization. We learned how to create basic documentation, manage different versions, creating custom pages, customizing the default website, and creating blogs."))}p.isMDXComponent=!0}}]);